/*
 * This file is generated by jOOQ.
 */
package DB.gen.tables.records;


import DB.gen.tables.UsersCoin;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersCoinRecord extends UpdatableRecordImpl<UsersCoinRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = 1338979881;

    /**
     * Setter for <code>imooc_shop.users_coin.user_name</code>.
     */
    public void setUserName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>imooc_shop.users_coin.user_name</code>.
     */
    public String getUserName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>imooc_shop.users_coin.coin</code>.
     */
    public void setCoin(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>imooc_shop.users_coin.coin</code>.
     */
    public Integer getCoin() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UsersCoin.USERS_COIN.USER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return UsersCoin.USERS_COIN.COIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCoinRecord value1(String value) {
        setUserName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCoinRecord value2(Integer value) {
        setCoin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersCoinRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersCoinRecord
     */
    public UsersCoinRecord() {
        super(UsersCoin.USERS_COIN);
    }

    /**
     * Create a detached, initialised UsersCoinRecord
     */
    public UsersCoinRecord(String userName, Integer coin) {
        super(UsersCoin.USERS_COIN);

        set(0, userName);
        set(1, coin);
    }
}
