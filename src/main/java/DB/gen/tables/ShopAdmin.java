/*
 * This file is generated by jOOQ.
 */
package DB.gen.tables;


import DB.gen.ImoocShop;
import DB.gen.Indexes;
import DB.gen.Keys;
import DB.gen.tables.records.ShopAdminRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopAdmin extends TableImpl<ShopAdminRecord> {

    private static final long serialVersionUID = -332273949;

    /**
     * The reference instance of <code>imooc_shop.shop_admin</code>
     */
    public static final ShopAdmin SHOP_ADMIN = new ShopAdmin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopAdminRecord> getRecordType() {
        return ShopAdminRecord.class;
    }

    /**
     * The column <code>imooc_shop.shop_admin.adminid</code>. 主键ID
     */
    public final TableField<ShopAdminRecord, UInteger> ADMINID = createField("adminid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>imooc_shop.shop_admin.adminuser</code>. 管理员账号
     */
    public final TableField<ShopAdminRecord, String> ADMINUSER = createField("adminuser", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "管理员账号");

    /**
     * The column <code>imooc_shop.shop_admin.adminpass</code>. 管理员密码
     */
    public final TableField<ShopAdminRecord, String> ADMINPASS = createField("adminpass", org.jooq.impl.SQLDataType.CHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "管理员密码");

    /**
     * The column <code>imooc_shop.shop_admin.adminemail</code>. 管理员电子邮箱
     */
    public final TableField<ShopAdminRecord, String> ADMINEMAIL = createField("adminemail", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "管理员电子邮箱");

    /**
     * The column <code>imooc_shop.shop_admin.logintime</code>. 登录时间
     */
    public final TableField<ShopAdminRecord, UInteger> LOGINTIME = createField("logintime", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "登录时间");

    /**
     * The column <code>imooc_shop.shop_admin.loginip</code>. 登录IP
     */
    public final TableField<ShopAdminRecord, Long> LOGINIP = createField("loginip", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "登录IP");

    /**
     * The column <code>imooc_shop.shop_admin.createtime</code>. 创建时间
     */
    public final TableField<ShopAdminRecord, UInteger> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "创建时间");

    /**
     * Create a <code>imooc_shop.shop_admin</code> table reference
     */
    public ShopAdmin() {
        this(DSL.name("shop_admin"), null);
    }

    /**
     * Create an aliased <code>imooc_shop.shop_admin</code> table reference
     */
    public ShopAdmin(String alias) {
        this(DSL.name(alias), SHOP_ADMIN);
    }

    /**
     * Create an aliased <code>imooc_shop.shop_admin</code> table reference
     */
    public ShopAdmin(Name alias) {
        this(alias, SHOP_ADMIN);
    }

    private ShopAdmin(Name alias, Table<ShopAdminRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShopAdmin(Name alias, Table<ShopAdminRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ShopAdmin(Table<O> child, ForeignKey<O, ShopAdminRecord> key) {
        super(child, key, SHOP_ADMIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ImoocShop.IMOOC_SHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOP_ADMIN_PRIMARY, Indexes.SHOP_ADMIN_SHOP_ADMIN_ADMINUSER_ADMINEMAIL, Indexes.SHOP_ADMIN_SHOP_ADMIN_ADMINUSER_ADMINPASS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopAdminRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_SHOP_ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopAdminRecord> getPrimaryKey() {
        return Keys.KEY_SHOP_ADMIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopAdminRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopAdminRecord>>asList(Keys.KEY_SHOP_ADMIN_PRIMARY, Keys.KEY_SHOP_ADMIN_SHOP_ADMIN_ADMINUSER_ADMINEMAIL, Keys.KEY_SHOP_ADMIN_SHOP_ADMIN_ADMINUSER_ADMINPASS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopAdmin as(String alias) {
        return new ShopAdmin(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopAdmin as(Name alias) {
        return new ShopAdmin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopAdmin rename(String name) {
        return new ShopAdmin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopAdmin rename(Name name) {
        return new ShopAdmin(name, null);
    }
}
